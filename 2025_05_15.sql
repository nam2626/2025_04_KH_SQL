-- 조인(JOIN)
-- 여러개 테이블에서 필요한 데이터를 조회하기 위해
-- 테이블을 결합해서 조회하기 위한 연산
-- 조인을 할려면 테이블끼리 연결 될 수 있는 동일한 데이터를 가지고 있는 컬럼이 있어야함
CREATE TABLE A(
	CODE CHAR(1),
	VAL NUMBER(1)
);
CREATE TABLE B(
	CODE CHAR(1),
	UNIT CHAR(1)
);
INSERT INTO A VALUES('A',1);
INSERT INTO A VALUES('B',2);
INSERT INTO A VALUES('C',3);
INSERT INTO A VALUES('D',4);

INSERT INTO B VALUES('A','+');
INSERT INTO B VALUES('B','-');
INSERT INTO B VALUES('C','*');
INSERT INTO B VALUES('F','/');

SELECT * FROM A;
SELECT * FROM B;

-- 동일 조인
-- 특정 컬럼을 선택해서 같은 값을 기준으로 결합
SELECT A.CODE, A.VAL, B.CODE, B.UNIT
FROM A, B
WHERE A.CODE = B.CODE;
-- INNER JOIN
-- 조인 조건을 만족하는 모든 행을 결함
SELECT A.CODE, A.VAL, B.CODE, B.UNIT
FROM A INNER JOIN B ON A.CODE = B.CODE;
SELECT A.CODE, A.VAL, B.CODE, B.UNIT
FROM A JOIN B ON A.CODE = B.CODE;

SELECT A.CODE, A.VAL, B.CODE, B.UNIT
FROM A INNER JOIN B ON A.CODE <> B.CODE;
-- NATURAL JOIN
-- 자연 조인
-- 자동으로 똑같은 컬럼을 찾아서 조인하고, 중복된 컬럼은 제거해서 조회
SELECT * FROM A NATURAL JOIN B;

-- CROSS JOIN
-- 교차 조인
-- 두 테이블의 모든 조합을 조회
SELECT * FROM A CROSS JOIN B;

-- 학생 테이블에 있는 학과명을 중복된 내용을 제외하고 조회
SELECT 
    'M' || TO_CHAR(ROW_NUMBER() OVER(ORDER BY MNAME),'FM00') AS MNO, 
    MNAME 
FROM 
    (SELECT DISTINCT MNAME FROM STUDENT);

CREATE TABLE MAJOR
AS
SELECT 
    'M' || TO_CHAR(ROW_NUMBER() OVER(ORDER BY MNAME),'FM00') AS MNO, 
    MNAME 
FROM 
    (SELECT DISTINCT MNAME FROM STUDENT);

-- 학생 테이블에 학과 번호 컬럼을 추가
ALTER TABLE STUDENT ADD MNO VARCHAR2(4);

-- 학생 테이블에 학과 번호를 업데이트
UPDATE STUDENT S SET S.MNO = 
(SELECT M.MNO FROM MAJOR M WHERE S.MNAME = M.MNAME);

SELECT * FROM STUDENT;
-- 학생 테이블에서 학과명 컬럼을 제거
ALTER TABLE STUDENT DROP COLUMN MNAME;

-- 학생 정보 조회시
-- 학번 이름 학과명 평점을 조회
SELECT S.SNO, S.SNAME, M.MNAME, S.SCORE
FROM STUDENT S INNER JOIN MAJOR M ON S.MNO = M.MNO;

-- CAR 테이블에 있는 제조사 이름을 제조사 테이블로 분리
-- 제조사 CAR_MAKER(CM_ID, CM_NAME)
-- 1. CAR 테이블에서 제조사 이름만 조회, 중복된 내용 제거
SELECT DISTINCT MAKER FROM CAR;
-- 2. 1번 결과를 가지고 제조사 아이디값 생성 제조사 첫글자 + 숫자3자리
--    숫자 3자리는 행번호
SELECT
    SUBSTR(MAKER,1,1) ||
    TO_CHAR(ROW_NUMBER() OVER(ORDER BY MAKER),'FM000') AS CM_ID,
    MAKER AS CM_NAME
FROM
(SELECT DISTINCT MAKER FROM CAR);
-- 3. CAR_MAKER 테이블 생성
CREATE TABLE CAR_MAKER
AS
SELECT
    SUBSTR(MAKER,1,1) ||
    TO_CHAR(ROW_NUMBER() OVER(ORDER BY MAKER),'FM000') AS CM_ID,
    MAKER AS CM_NAME
FROM
(SELECT DISTINCT MAKER FROM CAR);

SELECT * FROM CAR_MAKER;

-- CAR 테이블에 CM_ID 컬럼 추가
ALTER TABLE CAR ADD CM_ID VARCHAR2(8);
-- CAR 테이블에 CM_ID 값을 업데이트
UPDATE CAR C 
SET 
C.CM_ID = 
(SELECT CM.CM_ID FROM CAR_MAKER CM WHERE C.MAKER = CM.CM_NAME);
SELECT * FROM CAR;
-- CAR 테이블에 MAKER 컬럼을 제거
ALTER TABLE CAR DROP COLUMN MAKER;

-- 자동차 정보 조회시
--  자동차모델 번호, 자동차 모델명, 제조년도, 제조사명, 금액
SELECT C.ID, C.CNAME, C.MYEAR, CM.CM_NAME, C.PRICE
FROM CAR C 
INNER JOIN CAR_MAKER CM ON C.CM_ID = CM.CM_ID;

SELECT SNO FROM STUDENT;
--장학금 테이블
CREATE TABLE STUDENT_SCHOLARSHIP(
    SSNO NUMBER,
    SNO CHAR(8),
    MONEY NUMBER
);

SELECT * FROM STUDENT_SCHOLARSHIP;

-- 장학금을 받는 학생 정보만 조회
-- 학번, 이름, 학과명, 장학금 금액
SELECT S.SNO, S.SNAME, M.MNAME, SS.MONEY
FROM
    MAJOR M 
    INNER JOIN STUDENT S ON M.MNO = S.MNO
    INNER JOIN STUDENT_SCHOLARSHIP SS ON S.SNO = SS.SNO;

-- 제조사별 자동차 개수를 조회

-- 제조사별, 출시연도별 자동차 개수를 조회